RESTful API规范,或者说是一种API设计风格

##简介
REST是一种架构风格, REST → Representational State Transfer
网上的一切都可以看做是资源, 上网就是与互联网上的资源互动,调取URL
我们获取到资源后需要将其表示出来,转换成网页,图片,文字等等
当我们访问一个网站就代表客户端和服务器的一个互动过程,在这个过程中就涉及到了数据和状态的变化.

为了更方便的进行数据的传输,为API设计一条规范是很必要的,就是REST

对资源的的操作:
GET: 获取资源
POST: 新建资源
PUT: 更新资源 (想客户端提供改变后的所有资源)
PATCH: 在服务器更新资源 (想客户端提供改变的属性)
DELETE: 删除资源
HEAD: 获取资源的元数据
OPTIONS: 获取信息



RESTful API 设计风格
URL中不能有动词,每个网址代表一种资源,所以网址中不能有动词,只能有名词
URL结尾不应该包含斜杠'/'
正斜杠'/'表示层级关系
应该使用连字符'-'来提高URL的可读性,而不是下划线'_'
URL路径中首选小写字符
URL路径名词均为负数

#过滤信息 Filtering
?limist=10: 指定返回记录的数量
?offset=10: 指定返回记录的开始位置
?page=2&per_page=100: 指定第几页已经每页的记录数
?sortby=name&order=asc: 指定返回结果按照哪个属性排序,以及排序顺序
?animal_type_id=1: 指定筛选条件

#状态码
200 OK 成功
201 CREATED 用户新建或修改数据成功
204 NO CONTENT 用户删除数据成功
400 BAD REQUEST 请求有问题
401 Unauthoried 没有认证
403 Forbidden 用户访问时被禁止的
404 NOT FOUND 发送的请求针对不存在的记录
500 Service Unavailable 服务器不可用

